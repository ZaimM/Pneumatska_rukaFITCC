#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);

#define CLK 2
#define DT 3
#define SW 4

int counter = -1;
int lastCounter1=1;
int lastCounter2=2;
int currentStateCLK;
int lastStateCLK;
String currentDir ="";
unsigned long lastButtonPress = 0;

void setup() {
  
  // Set encoder pins as inputs
  pinMode(CLK,INPUT);
  pinMode(DT,INPUT);
  pinMode(SW, INPUT_PULLUP);

  Serial.begin(9600); // // Serial Communication is starting with 9600 of baudrate speed
  lcd.backlight();
  lcd.begin(16,2); 
  //------------------------------------------------------
  lcd.setCursor(0,0); //Defining positon to write from first row, first column .
  lcd.print("Paljenje..."); 
  lcd.setCursor(0,1); //Defining positon to write from first row, first column .
  lcd.print("Zadnja Verzija");
  delay(700); //wait 2 sec
  for(int i=0;i<5;i++)
  {
    lcd.clear();
    lcd.setCursor(0,1); //Defining positon to write from first row, first column .
  lcd.print("Zadnja Verzija");
    delay(300);
    
      lcd.setCursor(0,0); //Second row, first column
    lcd.print("Paljenje..."); 
  delay(700); //wait 2 sec
  }
  
  lcd.clear(); //clear the whole LCD
  // Read the initial state of CLK
  lastStateCLK = digitalRead(CLK);
}
//int counter = 0;
//int lastCounter1=1;
//int lastCounter2=2;
bool str=true;
void loop() {
  // Read the current state of CLK
  currentStateCLK = digitalRead(CLK);
  if(str==true){
    lcd.setCursor(0,0);
    lcd.print("Okrenite encoder");
    lcd.setCursor(0,1);
    lcd.print("Klik-odabir moda");
    str=false;
  }
  // If last and current state of CLK are different, then pulse occurred
  // React to only 1 state change to avoid double count
  if (currentStateCLK != lastStateCLK  && currentStateCLK == 1){

    // If the DT state is different than the CLK state then
    // the encoder is rotating CCW so decrement
    if (digitalRead(DT) != currentStateCLK) {
      counter --;
      currentDir ="CCW";
    } else {
      // Encoder is rotating CW so increment
      counter ++;
      currentDir ="CW";
    }
      Pocetni1();

    counter=abs(counter);
    if(counter>5)
    {
      counter=4;
    }
    
   if(counter==0){
    Pocetni1();
   }  
   if(counter==1){
    Pocetni2();
   }  
   if(counter==2){
    Pocetni3();
   }
    if(counter==3){
    Pocetni4();
   }
   if(counter==4){
    Pocetni5();
   }
   if(counter==5){
    Pocetni6();
   }
   
      
    Serial.print("Direction: ");
    Serial.print(currentDir);
    Serial.print(" | Counter: ");
    Serial.println(counter);
     Serial.print(" | lastCounter1: ");
    Serial.println(lastCounter1);
     Serial.print(" | lastCounter2: ");
    Serial.println(lastCounter2);
  
  }

  // Remember last CLK state
  lastStateCLK = currentStateCLK;

  // Read the button state
  int btnState = digitalRead(SW);

  //If we detect LOW signal, button is pressed
  if (btnState == LOW) {
    //if 50ms have passed since last LOW pulse, it means that the
    //button has been pressed, released and pressed again
    if (millis() - lastButtonPress > 50) {
      Serial.println("Button pressed!");
      if(counter==0)
      {
        Mod1(); str=true;
      }
      if(counter==1)
      {
        Mod2();str=true;
      }
      if(counter==2)
      {
        Mod3();str=true;
      }
       if(counter==3)
      {
        Mod4();str=true;
      }
       if(counter==4)
      {
        Mod5();str=true;
      }
       if(counter==5)
      {
        Mod6();str=true;
      }
    }

    // Remember last button press event
    lastButtonPress = millis();
  }
  lastCounter1=lastCounter2;
  lastCounter2=counter;
  // Put in a slight delay to help debounce the reading
  delay(1);
}
void Pocetni1(){
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("x");
  lcd.setCursor(2,0);
  lcd.print("mod1 7x 1s");
  lcd.setCursor(2,1);
  lcd.print("mod2 7x 2s");  
}
void Pocetni2(){
   
 lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("x");
  lcd.setCursor(2,0);
  lcd.print("mod2 7x 2s");
  lcd.setCursor(2,1);
  lcd.print("mod3 15x 1s"); 
  
 
}
void Pocetni3(){
lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("x");
  lcd.setCursor(2,0);
  lcd.print("mod3 15x 1s");
  lcd.setCursor(2,1);
  lcd.print("mod4 15x 2s"); 
}
void Pocetni4(){
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("x");
  lcd.setCursor(2,0);
  lcd.print("mod4 15x 2s");
  lcd.setCursor(2,1);
  lcd.print("mod5 25x 1s"); 
}
void Pocetni5(){
 lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("x");
  lcd.setCursor(2,0);
  lcd.print("mod5 25x 1s");
  lcd.setCursor(2,1);
  lcd.print("mod6 25x 2s"); 
}
void Pocetni6(){
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("x");
  lcd.setCursor(2,0);
  lcd.print("mod6 25x 2s");
  
 
}



void Mod1(){
  lcd.clear();
  lcd.print("mod1 u toku...");
  Serial.println("mod1 u toku...");
  
  for(int i=0;i<15;i++){
Serial.println("kompresor 3000");  
delay(100);
Serial.println("pauza 1000");
delay(100);
Serial.println("ventil 3000");  
delay(100);
}
Serial.println("kraj mod1");
lcd.clear();
}
void Mod2(){
  lcd.clear();
  lcd.print("mod2 u toku...");
  Serial.println("mod2 u toku...");
  
  for(int i=0;i<20;i++){
Serial.println("kompresor 3000");  
delay(100);
Serial.println("pauza 1500");
delay(100);
Serial.println("ventil 3000");  
delay(100);
}Serial.println("kraj mod2");
lcd.clear();
}
void Mod3(){
  lcd.clear();
  lcd.print("mod3 u toku...");
  Serial.println("mod3 u toku...");
  
  for(int i=0;i<30;i++){
Serial.println("kompresor 3000");  
delay(100);
Serial.println("pauza 2000");
delay(100);
Serial.println("ventil 3000");  
delay(100);
}
Serial.println("kraj mod3");
lcd.clear();
}
void Mod4(){
  lcd.clear();
  lcd.print("mod 4 u toku...");
  Serial.println("mod4 u toku...");
  
  for(int i=0;i<30;i++){
Serial.println("kompresor 3000");  
delay(100);
Serial.println("pauza 2000");
delay(100);
Serial.println("ventil 3000");  
delay(100);
}
Serial.println("kraj mod3");
lcd.clear();
}
void Mod5(){
  lcd.clear();
  lcd.print("mod5 u toku...");
  Serial.println("mod5 u toku...");
  
  for(int i=0;i<30;i++){
Serial.println("kompresor 3000");  
delay(100);
Serial.println("pauza 2000");
delay(100);
Serial.println("ventil 3000");  
delay(100);
}
Serial.println("kraj mod3");
lcd.clear();
}
void Mod6(){
  lcd.clear();
  lcd.print("mod6 u toku...");
  Serial.println("mod6 u toku...");
  
  for(int i=0;i<30;i++){
Serial.println("kompresor 3000");  
delay(100);
Serial.println("pauza 2000");
delay(100);
Serial.println("ventil 3000");  
delay(100);
}
Serial.println("kraj mod3");
lcd.clear();
}







